{"version":3,"sources":["factories/gameboard.js","components/Square.js","components/Board.js","components/Ship.js","components/Ships.js","components/Buttons.js","factories/ship.js","factories/player.js","components/Game.js","components/Header.js","App.js","index.js"],"names":["module","exports","grid","Array","fill","map","ships","addShip","ship","i","j","x","length","isHorizontal","checkShipAvailability","name","id","push","receiveAttack","find","hit","idx","indexOf","checkDone","every","isSunk","Square","state","attacked","dragEnter","e","preventDefault","dragOver","dragLeave","drop","quartileClicked","dataTransfer","getData","size","parseInt","props","num","handleDrop","getSquareState","s","attackSquare","isGameFinished","hasGameStarted","setState","handleClick","this","getCoords","onClick","onDragEnter","onDragLeave","onDragOver","onDrop","className","square","currentState","hasBeenAttacked","Component","Board","squares","key","hits","includes","Ship","horizontal","dragStart","styles","getComputedStyle","target","setData","backgroundColor","shipActive","handleMouseDown","offset","nativeEvent","offsetX","offsetY","Math","floor","dragged","draggable","onDragStart","onMouseDown","Ships","2","3","4","5","draggedShips","Object","keys","Buttons","flipShips","autoPlace","CreateShip","uuid","Player","board","Gameboard","getRandomCoords","random","getRandomInt","parseAttack","toString","enemy","attacks","playTurn","attack","console","log","autoAddShips","randomAttack","Game","getIndexes","position","output","placeHorizontal","split","indexes","updatedPlayer","player","prevState","cpu","playerWon","enemyWon","winner","updateActiveShip","flat","Header","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f35faf70.chunk.js","sourcesContent":["const Gameboard = () => {\r\n  const grid = Array(10)\r\n    .fill(null)\r\n    .map(() => Array(10).fill(null));\r\n  // Array for the ships (which will be added by user)\r\n  let ships = [];\r\n\r\n  const checkShipAvailability = (ship, i, j) => {\r\n    for (let x = 0; x < ship.length; x++) {\r\n      if (ship.isHorizontal) {\r\n        if (j + x <= 9 && grid[i][j + x] === null) continue;\r\n        else return false;\r\n      } else {\r\n        if (i + x <= 9 && grid[i + x][j] === null) continue;\r\n        else return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addShip = (ship, i, j) => {\r\n    // don't add if not available\r\n    if (!checkShipAvailability(ship, i, j)) return false;\r\n\r\n    for (let x = 0; x < ship.length; x++) {\r\n      if (ship.isHorizontal) {\r\n        grid[i][j + x] = [ship.name, ship.id, x + 1];\r\n      } else {\r\n        grid[i + x][j] = [ship.name, ship.id, x + 1];\r\n      }\r\n    }\r\n\r\n    ships.push(ship);\r\n    return true;\r\n  };\r\n\r\n  const receiveAttack = (i, j) => {\r\n    if (grid[i][j] !== null && grid[i][j] !== 'missed') {\r\n      // use 1 to represent the id of a ship (see above addShip fn)\r\n      let ship = ships.find((ship) => ship.id === grid[i][j][1]);\r\n      // use 2 to represent the idx of point hit (^)\r\n      ship.hit(grid[i][j][2] - 1);\r\n      // replace the ship in array\r\n      const idx = ships.indexOf(ship);\r\n      ships[idx] = ship;\r\n    } else {\r\n      grid[i][j] = 'missed';\r\n    }\r\n  };\r\n\r\n  const checkDone = () => {\r\n    return ships.every((ship) => ship.isSunk());\r\n  };\r\n\r\n  return {\r\n    grid,\r\n    ships,\r\n    addShip,\r\n    receiveAttack,\r\n    checkDone,\r\n  };\r\n};\r\n\r\nmodule.exports = Gameboard;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Square extends Component {\r\n  state = {\r\n    attacked: false,\r\n  };\r\n\r\n  // Note: In order to change the state of this component when the cpu attacks a specific square, I had to pass\r\n  // down props from the top-level component and hold a list of the cpu attacks to check whether any given\r\n  // square was part of the list.\r\n\r\n  // This method is very rarely used and alternative options are encouraged but I am still working on finding\r\n  // another way to structure my code.\r\n  static getDerivedStateFromProps(props, currentState) {\r\n    if (props.hasBeenAttacked && props.name === 'player') {\r\n      return {\r\n        attacked: true,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // Drag and Drop Methods\r\n  dragEnter = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  dragLeave = (e) => {};\r\n\r\n  drop = (e) => {\r\n    e.preventDefault();\r\n\r\n    // When using data transfer, getData always returns string values!\r\n    const quartileClicked = e.dataTransfer.getData('quartileClicked');\r\n    const size = parseInt(e.dataTransfer.getData('size'));\r\n    const idx = parseInt(this.props.num);\r\n\r\n    // Handle event on parent\r\n    if (this.props.handleDrop(quartileClicked, size, idx)) {\r\n      return true;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  // This method was created to get the status of any given square\r\n  getSquareState = (s) => {\r\n    // only add class if square has been attacked\r\n    if (typeof s === 'object' && s !== null) {\r\n      if (!this.state.attacked && this.props.name === 'player') {\r\n        return ' ship';\r\n      } else {\r\n        return ' hit';\r\n      }\r\n    } else {\r\n      if (this.state.attacked) {\r\n        return ' missed';\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n  };\r\n\r\n  attackSquare = (i, j) => {\r\n    if (this.props.isGameFinished || !this.props.hasGameStarted) return false;\r\n\r\n    // stop fn running if player attacks own board\r\n    if (this.props.name !== 'enemy' || this.state.attacked) return;\r\n\r\n    this.setState({\r\n      attacked: true,\r\n    });\r\n    this.props.handleClick(i, j);\r\n  };\r\n\r\n  render() {\r\n    const [i, j] = this.props.getCoords(this.props.num);\r\n    return (\r\n      <div\r\n        onClick={() => this.attackSquare(i, j)}\r\n        onDragEnter={this.dragEnter}\r\n        onDragLeave={this.dragLeave}\r\n        onDragOver={this.dragOver}\r\n        onDrop={this.drop}\r\n        className={\r\n          'grid-square' +\r\n          (this.state.attacked ? ' attacked' : '') +\r\n          this.getSquareState(this.props.square)\r\n        }\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React, { Component } from 'react';\r\nimport Square from './Square';\r\n\r\nexport class Board extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"board-container\">\r\n        <p className=\"player-name\">\r\n          {this.props.name === 'player' ? 'P1' : 'CPU'}\r\n        </p>\r\n        <div className=\"gameboard\">\r\n          {this.props.squares.map((square, idx) => (\r\n            <Square\r\n              handleClick={this.props.handleClick}\r\n              handleDrop={this.props.handleDrop}\r\n              getCoords={this.props.getCoords}\r\n              key={idx}\r\n              square={square}\r\n              num={idx}\r\n              name={this.props.name}\r\n              hasBeenAttacked={this.props.hits.includes(idx)}\r\n              hasGameStarted={this.props.hasGameStarted}\r\n              isGameFinished={this.props.isGameFinished}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Ship extends Component {\r\n  state = {\r\n    quartileClicked: 0,\r\n    horizontal: false,\r\n  };\r\n\r\n  // TODO: Find a better way of managing state which relies on props (perhaps redesign so it doesn't need to rely on props)\r\n  static getDerivedStateFromProps(props) {\r\n    if (props.horizontal) {\r\n      return {\r\n        horizontal: true,\r\n      };\r\n    }\r\n\r\n    if (!props.horizontal) {\r\n      return {\r\n        horizontal: false,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  dragStart = (e) => {\r\n    const styles = getComputedStyle(e.target);\r\n    e.dataTransfer.setData('block', styles.backgroundColor);\r\n    e.dataTransfer.setData('quartileClicked', this.state.quartileClicked);\r\n    e.dataTransfer.setData('size', this.props.size);\r\n\r\n    this.props.shipActive();\r\n  };\r\n\r\n  handleMouseDown = (e) => {\r\n    // let offset = elem.classList.contains('vertical') ? e.offsetY : e.offsetX;\r\n    let offset = this.state.horizontal\r\n      ? e.nativeEvent.offsetX\r\n      : e.nativeEvent.offsetY;\r\n    this.setState({\r\n      // hard-coded 40 to represent the square width\r\n      quartileClicked: Math.floor(offset / 40),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.props.name + ' ship' + (this.props.dragged ? ' dragged' : '')\r\n        }\r\n        draggable={!this.props.dragged}\r\n        onDragStart={this.dragStart}\r\n        onMouseDown={this.handleMouseDown}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ship;\r\n","import React, { Component } from 'react';\r\nimport Ship from './Ship';\r\n\r\nexport class Ships extends Component {\r\n  render() {\r\n    const ships = {\r\n      2: 'destroyer',\r\n      3: 'cruiser',\r\n      4: 'battleship',\r\n      5: 'carrier',\r\n    };\r\n    return (\r\n      <div\r\n        className={'drag-ships' + (this.props.horizontal ? '' : ' vertical')}\r\n      >\r\n        {this.props.ships.map((ship, idx) => (\r\n          <Ship\r\n            name={ships[ship]}\r\n            dragged={this.props.draggedShips.includes(idx)}\r\n            shipActive={() => this.props.shipActive(idx)}\r\n            size={Object.keys(ships).find((key) => ships[key] === ships[ship])}\r\n            key={idx}\r\n            horizontal={this.props.horizontal}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ships;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Buttons extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ship-btns\">\r\n        <i\r\n          className=\"fas fa-sync flip-ships\"\r\n          onClick={this.props.flipShips}\r\n        ></i>\r\n\r\n        <i\r\n          className=\"fas fa-location-arrow auto-place\"\r\n          onClick={this.props.autoPlace}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Buttons;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport const CreateShip = (length, isHorizontal) => {\r\n  const ship = new Array(length).fill(false);\r\n\r\n  const shipNames = {\r\n    2: 'Destroyer',\r\n    3: 'Cruiser',\r\n    4: 'Battleship',\r\n    5: 'Carrier',\r\n  };\r\n\r\n  const name = shipNames[length];\r\n\r\n  const id = uuid();\r\n\r\n  const hit = (i) => {\r\n    ship[i] = true;\r\n    return ship;\r\n  };\r\n\r\n  const isSunk = () => {\r\n    return ship.every((i) => i);\r\n  };\r\n\r\n  return { ship, id, length, name, isHorizontal, hit, isSunk };\r\n};\r\n\r\n// module.exports = CreateShip;\r\n","import Gameboard from './gameboard';\r\nimport { CreateShip } from './ship';\r\n\r\nexport const Player = (name) => {\r\n  // main vars\r\n  let board = Gameboard();\r\n  let enemy;\r\n  let attacks = [];\r\n\r\n  const playTurn = (enemy, i, j) => {\r\n    // stop fn running if player tries to attack same spot\r\n\r\n    let attack = parseAttack(i, j);\r\n    if (enemy.attacks.includes(attack)) return;\r\n\r\n    console.log('Player attack', attack);\r\n\r\n    // enemy receives attack\r\n    enemy.attacks.push(attack);\r\n    enemy.board.receiveAttack(i, j);\r\n\r\n    // check if all ships have sunk\r\n    return enemy.board.checkDone();\r\n  };\r\n\r\n  // random place ships (for cpu)\r\n  const autoPlace = (size) => {\r\n    let [i, j] = getRandomCoords();\r\n    let isHorizontal = Math.random() < 0.5 ? true : false;\r\n\r\n    let res = board.addShip(CreateShip(size, isHorizontal), i, j);\r\n\r\n    if (!res) {\r\n      return autoPlace(size);\r\n    }\r\n  };\r\n\r\n  const autoAddShips = () => {\r\n    let ships = [2, 3, 3, 4, 5];\r\n\r\n    for (let ship of ships) {\r\n      autoPlace(ship);\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  // Helper fns\r\n  const getRandomInt = (i) => {\r\n    return Math.floor(Math.random() * i);\r\n  };\r\n\r\n  const getRandomCoords = () => {\r\n    return [getRandomInt(10), getRandomInt(10)];\r\n  };\r\n\r\n  // convert between array and single num\r\n  const parseAttack = (i, j) => parseInt(i.toString() + j.toString());\r\n\r\n  const randomAttack = (enemy) => {\r\n    // Keep looking for new spot\r\n    let i, j;\r\n    do {\r\n      [i, j] = getRandomCoords();\r\n    } while (enemy.attacks.includes(parseAttack(i, j)));\r\n\r\n    enemy.board.receiveAttack(i, j);\r\n    enemy.attacks.push(parseAttack(i, j));\r\n\r\n    return enemy.board.checkDone();\r\n  };\r\n\r\n  return { board, enemy, attacks, playTurn, autoAddShips, randomAttack };\r\n};\r\n","import React, { Component } from 'react';\r\nimport Board from './Board';\r\nimport Ships from './Ships';\r\nimport Buttons from './Buttons';\r\nimport { Player } from '../factories/player';\r\nimport { CreateShip } from '../factories/ship';\r\n\r\nexport class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let player = Player('Player');\r\n    let cpu = Player('Computer');\r\n    cpu.autoAddShips();\r\n    player.enemy = cpu;\r\n    cpu.enemy = player;\r\n\r\n    this.state = {\r\n      player,\r\n      cpu,\r\n      ships: [2, 3, 3, 4, 5],\r\n      placeHorizontal: true,\r\n      shipActive: null,\r\n      draggedShips: [],\r\n      hasGameStarted: false,\r\n      isGameFinished: false,\r\n      winner: null,\r\n    };\r\n  }\r\n\r\n  getIndexes = (position, size, idx) => {\r\n    let output = [];\r\n\r\n    for (let i = 0; i < size; i++) {\r\n      if (this.state.placeHorizontal) {\r\n        output.push(idx - (position - i));\r\n      } else {\r\n        output.push(idx - (position - i) * 10);\r\n      }\r\n    }\r\n\r\n    return output;\r\n  };\r\n\r\n  // function to convert from single num into array with i, j coords\r\n  getCoords = (num) => {\r\n    if (parseInt(num) < 10) {\r\n      return [0, parseInt(num)];\r\n    } else {\r\n      return num\r\n        .toString()\r\n        .split('')\r\n        .map((i) => parseInt(i));\r\n    }\r\n  };\r\n\r\n  handleDrop = (quartileClicked, size, idx) => {\r\n    const indexes = this.getIndexes(quartileClicked, size, idx);\r\n    const [i, j] = this.getCoords(indexes[0]);\r\n\r\n    const placeHorizontal = this.state.placeHorizontal;\r\n    let updatedPlayer = this.state.player;\r\n\r\n    const addShipSuccessfully = updatedPlayer.board.addShip(\r\n      CreateShip(size, placeHorizontal),\r\n      i,\r\n      j\r\n    );\r\n\r\n    if (addShipSuccessfully) {\r\n      this.setState((prevState) => ({\r\n        player: updatedPlayer,\r\n        hasGameStarted: true,\r\n        draggedShips: [...prevState.draggedShips, prevState.shipActive],\r\n      }));\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  handleClick = (i, j) => {\r\n    if (this.state.isGameFinished) {\r\n      return false;\r\n    }\r\n\r\n    let updatedPlayer = this.state.player;\r\n    let enemy = this.state.cpu;\r\n\r\n    const playerWon = updatedPlayer.playTurn(enemy, i, j);\r\n    const enemyWon = enemy.randomAttack(updatedPlayer);\r\n    console.log('Handle click i/j:', i, j);\r\n\r\n    this.setState({\r\n      player: updatedPlayer,\r\n      cpu: enemy,\r\n      isGameFinished: playerWon || enemyWon,\r\n      winner: playerWon ? 'Player' : 'CPU',\r\n    });\r\n  };\r\n\r\n  updateActiveShip = (idx) => {\r\n    this.setState({\r\n      shipActive: idx,\r\n    });\r\n  };\r\n\r\n  flipShips = (e) => {\r\n    this.setState((prevState) => ({\r\n      placeHorizontal: !prevState.placeHorizontal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <Ships\r\n          ships={this.state.ships}\r\n          shipActive={this.updateActiveShip}\r\n          draggedShips={this.state.draggedShips}\r\n          horizontal={this.state.placeHorizontal}\r\n        />\r\n        <Buttons\r\n          flipShips={this.flipShips}\r\n          autoPlace={() => {\r\n            if (this.state.player.board.ships.length !== 0) return;\r\n\r\n            let updatedPlayer = this.state.player;\r\n            updatedPlayer.autoAddShips();\r\n\r\n            this.setState({\r\n              player: updatedPlayer,\r\n              // Show game has started\r\n              hasGameStarted: true,\r\n              // Set dragged ships to ships arr indexes\r\n              draggedShips: [0, 1, 2, 3, 4],\r\n            });\r\n          }}\r\n        />\r\n        <Board\r\n          name=\"player\"\r\n          handleClick={this.handleClick}\r\n          handleDrop={this.handleDrop}\r\n          getCoords={this.getCoords}\r\n          squares={this.state.player.board.grid.flat()}\r\n          hits={this.state.player.attacks}\r\n          hasGameStarted={this.state.hasGameStarted}\r\n          isGameFinished={this.state.isGameFinished}\r\n        />\r\n        <Board\r\n          name=\"enemy\"\r\n          handleClick={this.handleClick}\r\n          handleDrop={this.handleDrop}\r\n          getCoords={this.getCoords}\r\n          squares={this.state.cpu.board.grid.flat()}\r\n          hits={this.state.cpu.attacks}\r\n          hasGameStarted={this.state.hasGameStarted}\r\n          isGameFinished={this.state.isGameFinished}\r\n        />\r\n        <div\r\n          className={\r\n            'winner-text' + (this.state.isGameFinished ? '' : ' hidden')\r\n          }\r\n        >\r\n          <span>{this.state.winner} wins!</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"site-header\">\r\n        <a\r\n          href=\"https://github.com/guyroberts21/battleship\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          <i className=\"fab fa-github github-link\"></i>\r\n        </a>\r\n\r\n        <h1>Battleships</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Game from './components/Game';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Game />\r\n      <p className=\"game-info\">drag and drop the ships to play.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}